#!/usr/bin/env perl6

#This will send messages to Slack.

use WebService::Slack::Webhook;

my $url = $*HOME.add(".slack-url").slurp.chomp;
my $slack = WebService::Slack::Webhook.new(:$url);

multi sub MAIN($msg, :username(:$u), :icon(:$i)) {
	$slack.send(%(
		text       => $msg,
		username   => $u,
		icon_emoji => $i
	));
}


multi sub MAIN(:file(:$f)!, :username(:$u), :icon(:$i)) {
	$slack.send(%(
		text       => ' ```' ~ $f.IO.slurp ~ '```',
		username   => $u,
		icon_emoji => $i
	));
}


multi sub MAIN(:timeout(:$t) = 10, :username(:$u), :icon(:$i)) {
	my $stdin = $*IN.Supply(:size<10>);
	my $buf = "";

	react {
		whenever signal(SIGINT) {
			say "Killed after { now - INIT now}";
			exit;
		}

        whenever $stdin -> $msg {
          $buf ~= $msg;
         LAST {
				$slack.send(%(
					text       => ' ```' ~ $buf ~ '```',
					username   => $u,
					icon_emoji => $i
				)) unless $buf ~~ /^ \s+ $/;
				done;
			}
        }

		whenever Supply.interval($t) {
			my $msg;
			
			if $buf ~~ /\n$/ {
				$msg = $buf;
				$buf = "";
			} else {
				my @l = $buf.lines;
				my $li = @l.end;
				$msg = @l[0..($li-1)].join("\n");
				$buf = @l[$li];
			}
			
			$slack.send(%(
				text       => '```' ~ $msg ~ '```',
				username   => $u,
				icon_emoji => $i
			)) unless $buf ~~ /^ \s+ $/;
		}
	}
}

signal(SIGINT).tap: { note "Shutting downâ€¦"; }

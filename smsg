#!/usr/bin/env perl6

#This will send messages to Slack.

use WebService::Slack::Webhook;

my $url = $*HOME.add(".slack-url").slurp.chomp;
my $slack = WebService::Slack::Webhook.new(:$url);

multi sub MAIN($msg?, :file(:$f), :username(:$u), :icon(:$i)) {
	nextsame unless $msg || $f;
	my %data;
	if $msg {%data<text> = $msg;}
	if $f {%data<text> ~= ' ```' ~ $f.IO.slurp ~ '```';}
	if $u {%data<username> = $u;}
	if $i {%data<icon_emoji> = $i;}
	$slack.send(%data);
}

class Queue {
	has Str $!cache = "";
	has WebService::Slack::Webhook $.slack is required;
	has $.last = now;
	has $.timeout = 0;

	method add($msg) {
		$!cache ~= $msg;
		$!last = now;
		self.timer;
	}
	method send() {
		my $msg = $!cache;
		$!cache = "";
		$slack.send("```$msg```") unless $msg;
	}
	method timer() {
		Promise.in($!timeout).then:
			{
				if ((now - $!last) > $!timeout) { self.send; }
			}
	}
}

multi sub MAIN(:timeout(:$t), :username(:$u), :icon(:$i)) {
	my %data;
	if $u {%data<username> = $u;}
	if $i {%data<icon_emoji> = $i;}
	$slack.defaults = %data;

	if $t {
		my $q = Queue.new: timeout => $t, :$slack;
		my $s = $*IN.Supply(:size<1>).tap: -> $in { $q.add: $in; };
		$s.wait;
		$q.send;
	} else {
		my $msg = $*IN.slurp;
		$slack.send: '```' ~ $msg ~ '```';
	}
}
